plugins {
    id 'java'
    id 'org.flywaydb.flyway' version '6.5.5'
    id 'org.springframework.boot' version '2.4.4'
    id 'com.google.cloud.tools.jib' version '2.8.0'
    id 'com.avast.gradle.docker-compose' version '0.13.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.disney'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // spring
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // other
    implementation 'com.vladmihalcea:hibernate-types-52:2.9.13'
    implementation group: "com.twilio.sdk", name: "twilio", version: "8.15.0"

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2020.0.3"
    }
}

test {
    useJUnitPlatform()
}

flyway {
    user = 'admin'
    password = 'admin'
    url = 'jdbc:postgresql://localhost:5432/wait-times'
}

jib {
    container {
        ports = ['8080']
    }
    to {
        image = 'gcr.io/warrenburg-portfolio/wait-times-server:latest'
    }
    from {
        image = 'gcr.io/distroless/java:11'
    }
}

dockerCompose {
    removeOrphans = true
    removeVolumes = false
    projectName = 'wait-times'
    dockerComposeWorkingDirectory = "$rootDir/docker"
}